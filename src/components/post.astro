---
import type { Session } from "@auth/core/types"
import Trash from "./icons/trash.astro"
import TweetButtons from "./tweet-buttons.svelte"
import { turso } from "../turso"

interface Props {
	id: string
	userFullName: string
	content: string
	date: string
	profilePicture: string
	user_mail: any
	session: Session | null
}

const { userFullName, content, id, date, profilePicture, session, user_mail } = Astro.props

const getTimeDiff = (date: any) => {
	const postDate: Date = new Date(date)
	const currentDate: Date = new Date()

	return new Date(currentDate - postDate).getMinutes()
}

const likes = (await turso.execute(`SELECT  * from likes WHERE post_id = ${id}`)).rows.length

---

<div class="flex justify-start bg-slate-700 p-[16px] rounded-[12px] w-full" {id}>
	<div class="w-[70px] ml-0 mt-0">
		<img
			src={profilePicture}
			alt="Imagen de perfil del usuario {username}"
			class="rounded-full w-[60px] h-[60px]"
		/>
	</div>
	<div class="w-full ml-[20px]">
		<div class="flex justify-center align-center">
			<div class="w-full flex gap-[8px]">
				<h3>{userFullName}</h3>
				Â·
				<p class="text-slate-400">
					{getTimeDiff(date)} min
				</p>
			</div>
			{
				session?.user?.email === user_mail ? (
					<button
						onclick={`fetch('/api/delete?id=${id}'); this.disabled = 'true'; `}
						class=" disabled:opacity-50"
					>
						<Trash />
					</button>
				) : null
			}
		</div>
		<p>
			{content}
		</p>
		<TweetButtons likes={likes} id={id} client:load />
	</div>
</div>
