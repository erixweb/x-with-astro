---
import { turso } from "../turso"
import "../styles/main.css"
import Layout from "../layouts/layout.astro"
import Post from "../components/post.astro"
import ComposePost from "../components/compose-post.svelte"
import Github from "../components/icons/github.astro"
import { getSession } from "auth-astro/server"

const session = await getSession(Astro.request)
//console.log(session)
//await turso.execute("DROP TABLE posts")
//await turso.execute("DELETE * FROM posts")

await turso.execute(`CREATE TABLE IF NOT EXISTS posts (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		user_name TEXT,
		user_mail TEXT,
		user_photo TEXT,
		message TEXT,
		timestamp DATE DEFAULT (datetime('now','localtime'))
)`)
const { rows } = await turso.execute(
	"SELECT id, user_name, user_photo, message, timestamp, user_mail FROM posts ORDER BY timestamp DESC"
)

---

<Layout>
	<main class="max-w-[40em] p-[16px] flex flex-col gap-[20px]">
		{
			session ? (
				""
			) : (
				<button
					id="login"
					class="bg-slate-900 py-[6px] px-[16px] rounded-[7px] inline-flex border-slate-600 border-[1px]"
				>
					<span class="inline-flex gap-[20px]">
						<Github />
						Iniciar sessi√≥
					</span>
				</button>
			)
		}
		{session ? <ComposePost client:load /> : null}
		{
			rows.map((post) => (
				<Post
					id={`${post.id}`}
					userFullName={`${post.user_name}`}
					content={`${post.message}`}
					date={`${post.timestamp}`}
					profilePicture={`${post.user_photo}`}
					user_mail={post.user_mail}
					session={session}
				/>
			))
		}
	</main>
</Layout>
<script>
	const { signIn } = await import("auth-astro/client")
	const $button = document.getElementById("login")

	$button?.addEventListener("click", async (ev) => {
		ev.preventDefault()

		await signIn("github")
	})
</script>
